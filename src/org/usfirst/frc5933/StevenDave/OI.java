// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5933.StevenDave;

import org.usfirst.frc5933.StevenDave.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import org.usfirst.frc5933.StevenDave.subsystems.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public Joystick xBoxJoystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        xBoxJoystick = new Joystick(0);



        // SmartDashboard Buttons
        SmartDashboard.putData("GyroDriveStraight", new GyroDriveStraight());
        SmartDashboard.putData("UltrasonicDriveStraight", new UltrasonicDriveStraight());
        SmartDashboard.putData("EncoderDriveStraight", new EncoderDriveStraight());
        SmartDashboard.putData("EncoderTurnDegrees", new EncoderTurnDegrees());
        SmartDashboard.putData("Pos1LowBar", new Pos1LowBar());
        SmartDashboard.putData("Pos2Mote", new Pos2Mote());
        SmartDashboard.putData("Pos2Rampart", new Pos2Rampart());
        SmartDashboard.putData("Pos2RoughTerrain", new Pos2RoughTerrain());
        SmartDashboard.putData("Pos3Mote", new Pos3Mote());
        SmartDashboard.putData("Pos3Rampart", new Pos3Rampart());
        SmartDashboard.putData("Pos3RockWall", new Pos3RockWall());
        SmartDashboard.putData("Pos3RoughTerrain", new Pos3RoughTerrain());
        SmartDashboard.putData("Pos4Mote", new Pos4Mote());
        SmartDashboard.putData("Pos4Rampart", new Pos4Rampart());
        SmartDashboard.putData("Pos4RockWall", new Pos4RockWall());
        SmartDashboard.putData("Pos4RoughTerrain", new Pos4RoughTerrain());
        SmartDashboard.putData("Pos5Mote", new Pos5Mote());
        SmartDashboard.putData("Pos5Rampart", new Pos5Rampart());
        SmartDashboard.putData("Pos5RockWall", new Pos5RockWall());
        SmartDashboard.putData("Pos5RoughTerrain", new Pos5RoughTerrain());
        SmartDashboard.putData("SpyBox", new SpyBox());
        SmartDashboard.putData("Pos2RockWall", new Pos2RockWall());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getXBoxJoystick() {
        return xBoxJoystick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

